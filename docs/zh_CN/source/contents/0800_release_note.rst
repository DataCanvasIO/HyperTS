发版日志
========

版本 0.1.0
**************

本次HyperTS重点更新功能总结如下:

1. HyerTS提供了统一的接口对于多种时间序列任务, 包括时序预测, 分类以及回归;
   
2. HyerTS支持多种时序变量, 单变量、多变量、协变量;
   
3. HyperTS多模驱动, 轻重结合, 内置了丰富的算法空间, ;

4. HyperTS采用极简的操作而输出丰富的分析结果。

HyperTS是一款涵盖自动机器学习(AutoML)与自动深度学习(AutoDL)的全Pipeline工具包, 功能特性上支持:

- 数据清洗: 删除重复时间行、列类型校正、id列清理、协变量常量列清理、协变量大量缺失列清理及删除标签为空的样本;

- 数据预处理: 时间序列连续性补齐、缺失值简单填充、缺失值周期性滑动填充、离群点处理、OrdinalEncoder、LabelEncoder、StandardScaler、MinMaxScaler、MaxAbsScaler、Log(x+1);

- 数据集拆分: 按时间顺序拆分训练集与测试集, 以滑窗构建时序预测数据集的X及y;

- 模式模型: 内置统计模式,深度学习模式;
  
   a. 统计模式包括Prophet(单变量 | 预测)、ARIMA(单变量 | 预测)、VAR(多变量 | 预测)、TSForest(单变量 | 分类)、KNeighbors(单/多变量 | 分类);
  
   b. 深度学习包括DeepAR(单变量 | 预测 | 协变量)、RNN(单/多变量 | 预测/分类/回归 | 协变量)、GRU(单/多变量 | 预测/分类/回归 | 协变量)、LSTM(单/多变量 | 预测/分类/回归 | 协变量)、(LSTNet —> 深度学习 | 单/多变量 | 预测/分类/回归 | 协变量);

- 评估方法: Train-Validation-Holdout验证;

- 可视化分析: 绘制交互式预测曲线, 可显示历史信息, 预测信息, 实际信息, 置信区间等。


版本 0.1.2.1
**************

HyperTS本次更新细节如下:

- 新增交叉验证策略；

- 新增贪婪融合功能；

- 支持时间序列预测任务中数据可不包含时间戳信息；

- 支持时间序列预测任务中，训练数据尾部截断一定周期进行训练；

- 支持离散型（无固定时间频率）的时间序列预测任务；

- 支持非侵入固定参数；

- 支持傅里叶时序周期推断；

- 优化搜索空间及参数。


版本 0.1.3
**************

HyperTS本次更新细节如下:

- 调整搜索空间超参数;

- 增加实验执行结束报告最佳试验的参数;

- 修复ARIMA以兼容0.12.1及以上版本;

- 修复LSTNet的pt的问题;

- 简化自定义搜索空间, 可不传参task, timestamp, covariables和metircs;

- 新增 OutliersTransformer, 支持动态处理异常值;

- 调整finaltrain - lr, batch_size, epcochs等;
  
- 新增时间序列元特征提取器;

- 新增Time2Vec、RevIN等时间处理层;

- 新增N-Beats时序预测模型;

- 新增InceptionTime时序分类模型;

- 支持时序预测动态下采样;

- 重构正标签推断方法;

- 新增神经架构搜索模型;

- 修复了一些已知问题。


版本 0.1.4
**************

同版本 0.1.3.


版本 0.2.0
**************

HyperTS本次更新细节如下:

- 支持时间序列**异常检测**任务，并适配全Pipeline自动化过程;

- 新增IForest异常检测模型(stats mode);

- 新增TSOneClassSVM异常检测模型(stats mode);

- 新增ConvVAE异常检测模型(dl mode);

- 新增realKnownCause异常检测数据集;

- 支持异常检测结果可视化，可分析异常位置以及异常严重程度;

- 兼容Prophet版本1.1.1，现在pip安装hyperts可同时安装成功prophet;

- 兼容scipy所有版本;

- 新增API文档模块;

- 支持模型持久化(保存与重载训练完毕的模型);

- 在 ```model.predict()``` 修复了缺失值处理的问题;

- 对于时序预测任务，校正了DL模块的forecast函数;

- 重构了DL的ClassRegressSearchSpace更好的适应时序回归任务;

- 拓展 InceptionTime 以解决时序回归任务;

- 修复了一些已知问题。

- 感谢 @Peter Cotton 对hyperts的贡献。